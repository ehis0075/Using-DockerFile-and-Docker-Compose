FROM tomcat:10-jdk11  #build an img that includes java11 and tomcat 10

ADD target/MyWebApp.war /usr/local/tomcat/webapps/MyWebApp.war #drop the war file in the dir where tomcat needs it

EXPOSE 8080 #expose the tomcat port

CMD ["catalina.sh", "run"] #a command to run when the container start, for tomcat we can invoke the catalina script which start the tomcat server



-> to build the docker file to create the docker img: docker build -t img-name:1.0 .

-> to run the docker file to create container: docker run -d -p 8081:8080 img-name:1.0   #tells docker to make port 8081 available outside docker and binds that port to the host machine's port 8080

-> to remove a container: docker rm -f containerID #you can use the first 3 digit of the id

 
#to set up a bridge network to handle comm btw two containers 
-> docker network create app-network

#to check all the networks we have
->docker network ls

#to connect both containers to a network
->docker network connect app-db

#to connect the app to the network, first change how the app is connecting to the db by openning properties file, change localhost to app-db
#rebuild the image
->docker run --name container-name -d -p 8081:8080 --network=app-network img-name:1.0 
->



soap, api integration, java ee, integration with nibbs
